run
exit
run
b mai
b main
run
n
p init_opt
b main
run
run
run
run
b main
run
b execute
run
n
n
n
c
run
n
s
n
p cur_tkn
n
s
n
p name
n
n
p new_porc->program
p new_proc->program
n
b execute
run
n
p errno
b execute
run
n
s
n
p cur_tkn
b execute
run
n
s
n
n
p cur_tkn
p info->last_sequence
n
n
b execute
run
n
s
n
p job
b execute
run
n
b execute
run
n
s
n
n
p job
b execute
run
n
s
n
s
n
b execute
run
n
s
n
b execute
run
n
s
n
s
p jman->current_job
b execute
run
n
s
n
p job
b execute
run
n
s
n
p job
n
p  fork_seq
n
c
b jobmanager.c:349
run
p embryos[index].internal_key
p NONE
n
b jobmanager.c:349
run
n
p args[0]
p args
p args[0]
b jobmanager.c:349
run
p args[0]
p args
p embryos[index].arguments[0]
p args[0]
p args
p embryos[index].arguments
p embryos[index].arguments[0]
p embryos[index].arguments[0]
p embryos[index].arguments[0][0]
p args
p *args
p args[0]
char *a = (char*)embryos[index].arguments
char *a = (char*)embryos[index].arguments;
b jobmanager.c:322
run
n
p args
p args[0]
b jobmanager.c:322
run
n
p args[0]
b jobmanager.c:348
run
p args[0]
p args[1]
p embryos[0].program
b jobs_init
run
n
set follow-fork-mode parent
n
p jman->jobnames
n
s
n
p pgid
p/d pgid
n
n
n
p index
p num_embroys
p num_embryos
n
p jman->current_job
n
run
